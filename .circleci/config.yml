version: 2

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - setup-checkout
      - setup-base-image
      - setup-bbtest-image
      - fetch-dependencies:
          requires:
            - setup-checkout
      - test:
          requires:
            - fetch-dependencies
      - build-amd64:
          requires:
            - setup-base-image
            - test
      - build-armhf:
          requires:
            - setup-base-image
            - test
      - build-and-publish-docker:
          requires:
            - build-amd64
            - build-armhf
      - bbtest:
          requires:
            - setup-bbtest-image
            - build-and-publish-docker
      - release-github-artifacts:
          requires:
            - bbtest
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
            branches:
              ignore: /.*/

  rolling_bbtest:
    triggers:
      - schedule:
          cron: "20,50 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - setup-checkout
      - bbtest:
          requires:
            - setup-checkout

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  setup-checkout:
    docker:
      - image: docker:18.06.0-ce
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GOBIN: /usr/lib/go/bin/go
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run:
          name: Set DOCKER_VERSION to master
          command: |
            echo -e master > /home/circleci/project/DOCKER_VERSION
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-base-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project

  # -------------------------------------------------------------------------- #

  setup-base-image:
    docker:
      - image: docker:18.06.0-ce
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GOBIN: /usr/lib/go/bin/go
    working_directory: /home/circleci/project
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Build base image
          command: |
            docker build -t openbankdev/lake_base:latest -f ./dev/Dockerfile .
          no_output_timeout: 5m
      - deploy:
          name: Push bbtest images to DockerHUB
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker push openbankdev/lake_base:latest
          no_output_timeout: 5m

  # -------------------------------------------------------------------------- #

  setup-bbtest-image:
    docker:
      - image: docker:18.06.0-ce
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GOBIN: /usr/lib/go/bin/go
    working_directory: /home/circleci/project
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Build bbtest image
          command: |
            docker build -t openbankdev/lake_bbtest:latest -f ./bbtest/Dockerfile .
          no_output_timeout: 5m
      - deploy:
          name: Push bbtest images to DockerHUB
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker push openbankdev/lake_bbtest:latest
          no_output_timeout: 5m

  # -------------------------------------------------------------------------- #

  fetch-dependencies:
    docker:
      - image: circleci/golang:1.11
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GO111MODULE: "on"
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run:
          name: Ensure services namespace
          command: |
            mkdir -p /go/src/github.com/jancajthaml-openbank
            cp -r \
              /home/circleci/project/services/lake \
              /go/src/github.com/jancajthaml-openbank/lake
      - run:
          name: Sync dependencies
          command: |
            cd /go/src/github.com/jancajthaml-openbank/lake
            go mod vendor
      - run:
          name: Move vendor folder to project
          command: |
            cp -r \
              /go/src/github.com/jancajthaml-openbank/lake/vendor \
              /home/circleci/project/services/lake/vendor
      - run:
          name: Update DOCKER_VERSION + DEBIAN_VERSION
          command: |
            if [ -z ${CIRCLE_TAG} ] ; then
              tags=($(git tag --sort=-v:refname))
              if [ ${#tags[@]} -eq 0 ] ; then
                VERSION=v0.0.0
              else
                VERSION=${tags[0]}
              fi
              META=$(sed 's:.*/::' <<< ${CIRCLE_BRANCH})
              echo -e "${VERSION}+${META}" > /home/circleci/project/DEBIAN_VERSION
              echo -e "${VERSION}" > /home/circleci/project/DOCKER_VERSION
            else
              echo -e "${CIRCLE_TAG}" > /home/circleci/project/DEBIAN_VERSION
              echo -e "${CIRCLE_TAG}" > /home/circleci/project/DOCKER_VERSION
            fi
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project/dev
            - /home/circleci/project/bbtest
            - /home/circleci/project/packaging
            - /go/src/github.com/jancajthaml-openbank/lake
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-versions-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project/DEBIAN_VERSION
            - /home/circleci/project/DOCKER_VERSION

  # -------------------------------------------------------------------------- #

  build-amd64:
    docker:
      - image: openbankdev/lake_base:latest
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-versions-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package binaries
          command: |
            /home/circleci/project/dev/lifecycle/package --arch linux/amd64 --pkg lake
          no_output_timeout: 5m
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /home/circleci/project/DEBIAN_VERSION)
            /home/circleci/project/dev/lifecycle/debian -v ${VERSION} --arch amd64 --pkg lake
          no_output_timeout: 5m
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-binaries-amd64-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project/packaging/bin

  # -------------------------------------------------------------------------- #

  build-armhf:
    docker:
      - image: openbankdev/lake_base:latest
    working_directory: /home/circleci/project
    steps:
      - setup_remote_docker:
          version: 18.06.0-ce
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-versions-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package binaries
          command: |
            /home/circleci/project/dev/lifecycle/package --arch linux/armhf --pkg lake
          no_output_timeout: 5m
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /home/circleci/project/DEBIAN_VERSION)
            /home/circleci/project/dev/lifecycle/debian -v ${VERSION} --arch armhf --pkg lake
          no_output_timeout: 5m
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-binaries-armhf-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project/packaging/bin

  # -------------------------------------------------------------------------- #

  build-and-publish-docker:
    docker:
      - image: docker:18.06.0-ce
    working_directory: /home/circleci/project
    steps:
      - setup_remote_docker:
          version: 18.06.0-ce
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-base-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-binaries-amd64-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-binaries-armhf-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-versions-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for docker
          command: |
            VERSION=$(cat /home/circleci/project/DOCKER_VERSION)
            docker build -t openbank/lake:${VERSION} .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker push openbank/lake:${VERSION}

  # -------------------------------------------------------------------------- #

  test:
    docker:
      - image: openbankdev/lake_base:latest
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Unit test
          command: /home/circleci/project/dev/lifecycle/test --pkg lake
          no_output_timeout: 5m

  # -------------------------------------------------------------------------- #

  bbtest:
    machine: true
    working_directory: /home/circleci/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-base-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-versions-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run blackbox tests
          command: |
            VERSION=$(cat /home/circleci/project/DOCKER_VERSION)
            docker exec -it $(\
              docker run -d -ti \
                -e UNIT_VERSION="${VERSION}" \
                -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /var/lib/docker/containers:/var/lib/docker/containers \
                -v /home/circleci/project/bbtest:/opt/bbtest \
                -v /home/circleci/project/reports:/reports \
              openbankdev/lake_bbtest \
            ) rspec --require /opt/bbtest/spec.rb \
              --format documentation \
              --format RspecJunitFormatter \
              --out junit.xml \
              --pattern /opt/bbtest/features/*.feature
      - store_test_results:
          path: /home/circleci/project/bbtest
      - store_artifacts:
          path: /home/circleci/project/reports
          destination: reports

  # -------------------------------------------------------------------------- #

  release-github-artifacts:
    docker:
      - image: docker:18.06.0-ce-git
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-binaries-amd64-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - cache-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-binaries-armhf-{{ .Environment.CIRCLE_SHA1 }}
      - run: if [ ! -f ./packaging/bin/lake-linux-amd64 ] ; then exit 1 ; fi
      - run: if [ ! -f ./packaging/bin/lake-linux-armhf ] ; then exit 1 ; fi
      - run: if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_amd64.deb ] ; then exit 1 ; fi
      - run: if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_armhf.deb ] ; then exit 1 ; fi
      - deploy:
          name: Release artifacts to github
          command: |
            /home/circleci/project/dev/lifecycle/release \
              -v ${CIRCLE_TAG} \
              -t ${GITHUB_RELEASE_TOKEN}

# ---------------------------------------------------------------------------- #
