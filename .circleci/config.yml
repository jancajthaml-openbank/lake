version: 2

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - setup
      - package:
          requires:
            - build
      - bbtest:
          requires:
            - package

  rolling:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - bbtest

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  setup:

    docker:
      - image: docker:17.09.0-ce-git
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GOBIN: /usr/lib/go/bin/go

    working_directory: /home/circleci/project

    steps:

      - checkout

      - setup_remote_docker

      - run:
          name: Build images
          command: |
            docker build -t openbankdev/lake_bbtest ./bbtest &
            docker build -t openbankdev/lake_base ./dev &
            wait

      - run:
          name: Login to DockerHUB
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}

      - deploy:
          name: Push to docker hub
          command: |
            upload_to_docker_hub() {
              docker tag ${1} "${1}:latest"
              docker push "${1}:latest"
            }

            upload_to_docker_hub openbankdev/lake_bbtest &
            upload_to_docker_hub openbankdev/lake_base &
            wait

  # -------------------------------------------------------------------------- #

  test:

    docker:
      - image: openbankdev/lake_base
        environment:
          - DIST: /go/src/github.com/jancajthaml-openbank/lake/bin

    working_directory: /go/src/github.com/jancajthaml-openbank/lake

    steps:

      - checkout

      - run: dep ensure

      - run: go test -v ./... -benchmem -bench=. -timeout=20s

  # -------------------------------------------------------------------------- #

  build:

    docker:
      - image: openbankdev/lake_base
        environment:
          - DIST: /go/src/github.com/jancajthaml-openbank/lake/packaging/debian/openbank/services/lake

    working_directory: /go/src/github.com/jancajthaml-openbank/lake

    steps:

      - checkout

      - run: dep ensure

      - run: if [ -d ${DIST} ] && [ "$(ls -A ${DIST})" ] ; then rm -rf ${DIST}/* ; fi

      - run:
          name: Package
          command: |
            tags=($(git tag --sort=-v:refname))
            if [ ${#tags[@]} -eq 0 ] ; then
              VERSION=v0.0.0
            else
              VERSION=${tags[0]}
            fi

            if [ -n "$(git log -1 --pretty=%B | grep '[v?][0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)" ] ; then
              META=$(sed 's:.*/::' <<< ${CIRCLE_BRANCH})
              VERSION=${VERSION}+${META}
            fi

            ./dev/lifecycle/package -v ${VERSION} -t linux
            ./dev/lifecycle/debian -v ${VERSION}

            echo "${VERSION}" > \
              /go/src/github.com/jancajthaml-openbank/lake/packaging/bin/VERSION

      - persist_to_workspace:
          root: /go/src/github.com/jancajthaml-openbank/lake/packaging/bin
          paths:
            - lake_*_amd64.deb
            - linux-amd64
            - VERSION

  # -------------------------------------------------------------------------- #

  package:

    docker:
      - image: docker:17.09.0-ce-git

    working_directory: /app

    steps:

      - checkout

      - attach_workspace:
          at: /app/packaging/bin

      - setup_remote_docker

      - run: if [ -z "$(find /app/packaging/bin -type f -name 'lake_*_amd64.deb' -print)" ] ; then exit 1 ; fi

      - run: if [ ! -f /app/packaging/bin/linux-amd64 ] ; then exit 1 ; fi

      - run: docker build -t openbank/lake .

      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}

      - deploy:
          name: Release artifacts
          command: |
            upload_to_docker_hub() {
              echo "tagging and pushing ${1}:${2}"
              docker tag ${1} "${1}:${2}"
              docker push "${1}:${2}"
            }

            VERSION=$(cat /app/packaging/bin/VERSION)
            VERSION=${VERSION#*+}

            if [ -n "$(git log -1 --pretty=%B | grep '[v?][0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)" ] ; then
              echo "major release ${VERSION}"
              upload_to_docker_hub openbank/lake latest
              upload_to_docker_hub openbank/lake ${VERSION}
              docker-compose run --rm release -v ${VERSION} -t ${GITHUB_RELEASE_TOKEN}
            else
              echo "snapshot ${VERSION}"
              upload_to_docker_hub openbank/lake ${VERSION}
            fi

      - persist_to_workspace:
          root: /app/packaging/bin
          paths:
            - VERSION

  # -------------------------------------------------------------------------- #

  bbtest:
    machine: true

    environment:
      - PERSISTENCE_PATH: /home/circleci/project/dev/data

    working_directory: /home/circleci/project

    steps:

      - checkout

      - attach_workspace:
          at: /home/circleci/project/packaging/bin

      - run:
          name: Run blackbox tests
          command: |
            pull() {
              echo "pulling ${1}:${2}"
              docker pull ${1}:${2}
            }

            VERSION=$(cat /home/circleci/project/packaging/bin/VERSION)
            VERSION=${VERSION#*+}

            pull openbank/lake ${VERSION} & \
            pull openbankdev/lake_bbtest latest & \
            wait

            VERSION=${VERSION} docker-compose run --rm bbtest

      - store_test_results:
          path: /home/circleci/project/bbtest

      - store_artifacts:
          path: /home/circleci/project/reports
          destination: reports

# ---------------------------------------------------------------------------- #
