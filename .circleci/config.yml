version: 2

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  tag:
    jobs:
      - checkout:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - versions:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - deps:
          requires:
            - checkout
          filters:
            branches:
              only: master
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - test:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - bin-amd64:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - bin-armhf:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - bin-arm64:
          requires:
            - deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - debian-amd64:
          requires:
            - bin-amd64
            - versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - debian-armhf:
          requires:
            - bin-armhf
            - versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - debian-arm64:
          requires:
            - bin-arm64
            - versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - publish:
          requires:
            - test
            - debian-amd64
            - debian-armhf
            - debian-arm64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - bbtest-amd64:
          requires:
            - publish
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - release:
          requires:
            - bbtest-amd64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/

  commit:
    jobs:
      - checkout
      - versions
      - deps:
          requires:
            - checkout
      - test:
          requires:
            - deps
      - bin-amd64:
          requires:
            - deps
      - bin-armhf:
          requires:
            - deps
      - bin-arm64:
          requires:
            - deps
      - debian-amd64:
          requires:
            - bin-amd64
            - versions
      - debian-armhf:
          requires:
            - bin-armhf
            - versions
      - debian-arm64:
          requires:
            - bin-arm64
            - versions
      - publish:
          requires:
            - test
            - debian-amd64
            - debian-armhf
            - debian-arm64
      - bbtest-amd64:
          requires:
            - publish

  rolling_test:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout
      - versions
      - bbtest-amd64:
          requires:
            - checkout
            - versions

  rolling_performance:
    triggers:
      - schedule:
          cron: "0 3,15 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout
      - versions
      - perf-amd64:
          requires:
            - checkout
            - versions

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  checkout:
    docker:
      - image: alpine/git
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - save_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/.git
            - /mnt/ramdisk/dev
            - /mnt/ramdisk/services
            - /mnt/ramdisk/packaging
            - /mnt/ramdisk/bbtest
            - /mnt/ramdisk/perf

  # -------------------------------------------------------------------------- #

  versions:
    docker:
      - image: alpine/git
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - run:
          name: Update DOCKER_VERSION + TAG_VERSION
          command: |
            if [ -z ${CIRCLE_TAG} ] ; then
              tags=$(git tag --sort=-v:refname | head -1)
              if [ -z ${tags} ] ; then
                VERSION=v0.0.0
              else
                VERSION=${tags}
              fi
              META=$(echo -e ${CIRCLE_BRANCH} | sed 's:.*/::')
              echo -e "${VERSION#v}" > /mnt/ramdisk/TAG_VERSION
              echo -e "${VERSION}-${META}" > /mnt/ramdisk/DOCKER_VERSION
            else
              echo -e "${CIRCLE_TAG#v}" > /mnt/ramdisk/TAG_VERSION
              echo -e "${CIRCLE_TAG}" > /mnt/ramdisk/DOCKER_VERSION
            fi
      - save_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/TAG_VERSION
            - /mnt/ramdisk/DOCKER_VERSION

  # -------------------------------------------------------------------------- #

  deps:
    docker:
      - image: jancajthaml/go:latest
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Ensure services namespace
          command: |
            mkdir -p /go/src/github.com/jancajthaml-openbank
            cp -r \
              /mnt/ramdisk/services/lake \
              /go/src/github.com/jancajthaml-openbank/lake
      - run:
          name: Sync dependencies
          command: |
            /mnt/ramdisk/dev/lifecycle/sync \
              --pkg lake
      - run:
          name: Move vendor folder to project
          command: |
            cp -r \
              /go/src/github.com/jancajthaml-openbank/lake/vendor \
              /mnt/ramdisk/services/lake/vendor
      - save_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /go/src/github.com/jancajthaml-openbank/lake

  # -------------------------------------------------------------------------- #

  bin-amd64:
    docker:
      - image: jancajthaml/go:latest
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package binaries
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/amd64 \
              --pkg lake \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - save_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  bin-armhf:
    docker:
      - image: jancajthaml/go:latest
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package binaries
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/armhf \
              --pkg lake \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - save_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  bin-arm64:
    docker:
      - image: jancajthaml/go:latest
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package binaries
          command: |
            /mnt/ramdisk/dev/lifecycle/package \
              --arch linux/arm64 \
              --pkg lake \
              --output /mnt/ramdisk/packaging/bin
          no_output_timeout: 5m
      - save_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  debian-amd64:
    docker:
      - image: jancajthaml/debian-packager:latest
    working_directory: /mnt/ramdisk/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /mnt/ramdisk/TAG_VERSION)
            /mnt/ramdisk/dev/lifecycle/debian \
              --arch amd64 \
              --pkg lake \
              --version ${VERSION} \
              --source /mnt/ramdisk/packaging
          no_output_timeout: 5m
      - save_cache:
          key: debian-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  debian-armhf:
    docker:
      - image: jancajthaml/debian-packager:latest
    working_directory: /mnt/ramdisk/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /mnt/ramdisk/TAG_VERSION)
            /mnt/ramdisk/dev/lifecycle/debian \
              --arch armhf \
              --pkg lake \
              --version ${VERSION} \
              --source /mnt/ramdisk/packaging
          no_output_timeout: 5m
      - save_cache:
          key: debian-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /mnt/ramdisk/packaging/bin

  # -------------------------------------------------------------------------- #

  debian-arm64:
    docker:
      - image: jancajthaml/debian-packager:latest
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for debian
          command: |
            VERSION=$(cat /mnt/ramdisk/TAG_VERSION)
            /mnt/ramdisk/dev/lifecycle/debian \
              --arch arm64 \
              --pkg lake \
              --version ${VERSION} \
              --source /mnt/ramdisk/packaging
          no_output_timeout: 5m
      - save_cache:
          key: debian-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project/packaging/bin

  # -------------------------------------------------------------------------- #

  test:
    docker:
      - image: jancajthaml/go:latest
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependencies-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Check ramdisk contents
          command: |
            ls -la /mnt/ramdisk
      - run:
          name: Unit test
          command: |
            /mnt/ramdisk/dev/lifecycle/test \
              --pkg lake \
              --output /mnt/ramdisk/reports
          no_output_timeout: 5m
      - store_test_results:
          path: /mnt/ramdisk/reports/unit-tests

  # -------------------------------------------------------------------------- #

  publish:
    docker:
      - image: docker:19.03
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: debian-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Package for docker
          command: |
            DOCKER_VERSION=$(cat /mnt/ramdisk/DOCKER_VERSION)
            TAG_VERSION=$(cat /mnt/ramdisk/TAG_VERSION)

            docker build -t openbank/lake:${DOCKER_VERSION} .

            docker tag openbank/lake:${DOCKER_VERSION} \
              docker.pkg.github.com/jancajthaml-openbank/lake/lake:${TAG_VERSION}

            docker tag openbank/lake:${DOCKER_VERSION} \
              docker.io/openbank/lake:${DOCKER_VERSION}

            docker login docker.pkg.github.com -u jancajthaml -p ${GITHUB_RELEASE_TOKEN}
            docker push docker.pkg.github.com/jancajthaml-openbank/lake/lake:${TAG_VERSION}

            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker push docker.io/openbank/lake:${DOCKER_VERSION}

  # -------------------------------------------------------------------------- #

  bbtest-amd64:
    machine:
      image: circleci/classic:201808-01
      environment:
        - COMPOSE_DOCKER_CLI_BUILD: 1
        - DOCKER_BUILDKIT: 1
      docker_layer_caching: false
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: docker pull jancajthaml/bbtest:amd64
      - run:
          name: Run blackbox tests
          command: |
            IMAGE_VERSION=$(cat /mnt/ramdisk/DOCKER_VERSION)
            UNIT_VERSION=$(cat /mnt/ramdisk/TAG_VERSION)

            docker exec -it $(\
              docker run -d -t \
                -e IMAGE_VERSION="${IMAGE_VERSION}" \
                -e UNIT_VERSION="${UNIT_VERSION}" \
                -e UNIT_ARCH=amd64 \
                -e CI=1 \
                -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /var/lib/docker/containers:/var/lib/docker/containers \
                -v /mnt/ramdisk/bbtest:/opt/app \
                -v /mnt/ramdisk/reports:/tmp/reports \
                -w /opt/app \
              jancajthaml/bbtest:amd64 \
            ) python3 /opt/app/main.py
          no_output_timeout: 5m
      - store_test_results:
          path: /home/circleci/project/reports/blackbox-tests/cucumber
      - store_artifacts:
          path: /home/circleci/project/reports/blackbox-tests
          destination: reports

  # -------------------------------------------------------------------------- #

  perf-amd64:
    machine:
      image: circleci/classic:201808-01
      environment:
        - COMPOSE_DOCKER_CLI_BUILD: 1
        - DOCKER_BUILDKIT: 1
      docker_layer_caching: false
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: versions-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: docker pull jancajthaml/bbtest:amd64
      - run:
          name: Run perf tests
          command: |
            IMAGE_VERSION=$(cat /mnt/ramdisk/DOCKER_VERSION)
            UNIT_VERSION=$(cat /mnt/ramdisk/TAG_VERSION)

            docker exec -it $(\
              docker run -d -t \
                -e IMAGE_VERSION="${IMAGE_VERSION}" \
                -e UNIT_VERSION="${UNIT_VERSION}" \
                -e UNIT_ARCH=amd64 \
                -e MESSAGES_PUSHED=100000000 \
                -e CI=1 \
                -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /var/lib/docker/containers:/var/lib/docker/containers \
                -v /mnt/ramdisk/perf:/opt/app \
                -v /mnt/ramdisk/reports:/tmp/reports \
              jancajthaml/bbtest:amd64 \
            ) python3 /opt/app/main.py
          no_output_timeout: 5h
      - store_artifacts:
          path: /mnt/ramdisk/reports/perf-tests
          destination: reports

  # -------------------------------------------------------------------------- #

  release:
    docker:
      - image: jancajthaml/debian-packager:latest
    working_directory: /mnt/ramdisk
    steps:
      - restore_cache:
          key: code-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: binaries-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ ! -f ./packaging/bin/lake-linux-amd64 ] ; then
              echo "lake-linux-amd64 not found at"
              ls -la ./packaging/bin
              exit 1
            fi
      - restore_cache:
          key: binaries-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ ! -f ./packaging/bin/lake-linux-armhf ] ; then
              echo "lake-linux-armhf not found at"
              ls -la ./packaging/bin
              exit 1
            fi
      - restore_cache:
          key: binaries-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ ! -f ./packaging/bin/lake-linux-arm64 ] ; then
              echo "lake-linux-arm64 not found at"
              ls -la ./packaging/bin
              exit 1
            fi
      - restore_cache:
          key: debian-amd64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_amd64.deb ] ; then
              echo "lake_${CIRCLE_TAG#v}_amd64.deb not found at"
              ls -la ./packaging/bin
              exit 1
            fi
      - restore_cache:
          key: debian-armhf-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_armhf.deb ] ; then
              echo "lake_${CIRCLE_TAG#v}_armhf.deb not found at"
              ls -la ./packaging/bin
              exit 1
            fi
      - restore_cache:
          key: debian-arm64-{{ .Environment.CIRCLE_TAG }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_arm64.deb ] ; then
              echo "lake_${CIRCLE_TAG#v}_arm64.deb not found at"
              ls -la ./packaging/bin
              exit 1
            fi
      - deploy:
          name: Release artifacts to github
          command: |
            /mnt/ramdisk/dev/lifecycle/release \
              -v ${CIRCLE_TAG} \
              -t ${GITHUB_RELEASE_TOKEN}

# ---------------------------------------------------------------------------- #
