version: 2

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - setup:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
      - test:
          requires:
            - setup
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
      - build:
          requires:
            - setup
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
      - package:
          requires:
            - build
            - test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
      - bbtest:
          requires:
            - package
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
      - release:
          requires:
            - bbtest
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
            branches:
              ignore: /.*/

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  setup:
    docker:
      - image: docker:17.09.0-ce-git
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GOBIN: /usr/lib/go/bin/go
    working_directory: /go/src/github.com/jancajthaml-openbank/lake
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t openbankdev/lake_base ./dev
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
      - deploy:
          name: Push dev docker images to DockerHUB
          command: |
            upload_to_docker_hub() {
              docker tag ${1} "${1}:${2}"
              docker push "${1}:${2}"
            }

            upload_to_docker_hub openbankdev/lake_base latest
      - save_cache:
          key: lake-base-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
          paths:
            - /go/src/github.com/jancajthaml-openbank/lake

  # -------------------------------------------------------------------------- #

  test:
    docker:
      - image: openbankdev/lake_base
    working_directory: /go/src/github.com/jancajthaml-openbank/lake
    steps:
      - restore_cache:
          keys:
            - lake-base-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
      - run: dep ensure
      - run: go test -v ./... -benchmem -bench=. -timeout=20s

  # -------------------------------------------------------------------------- #

  build:
    docker:
      - image: openbankdev/lake_base
    working_directory: /go/src/github.com/jancajthaml-openbank/lake
    steps:
      - restore_cache:
          keys:
            - lake-base-{{ .Environment.CIRCLE_SHA1 }}
      - run: dep ensure
      - run: ./dev/lifecycle/package --target linux/amd64
      - run: ./dev/lifecycle/package --target linux/armhf
      - run:
          name: Package debian
          command: |
            if [ -z ${CIRCLE_TAG} ] ; then
              tags=($(git tag --sort=-v:refname))
              if [ ${#tags[@]} -eq 0 ] ; then
                VERSION=v0.0.0
              else
                VERSION=${tags[0]}
              fi
              META=$(sed 's:.*/::' <<< ${CIRCLE_BRANCH})
              VERSION=${VERSION}+${META}
            else
              VERSION=${CIRCLE_TAG}
            fi

            ./dev/lifecycle/debian -v ${VERSION} --arch amd64
            ./dev/lifecycle/debian -v ${VERSION} --arch armhf
      - save_cache:
          key: lake-binaries-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
          paths:
            - /go/src/github.com/jancajthaml-openbank/lake
      - persist_to_workspace:
          root: /go/src/github.com/jancajthaml-openbank/lake/packaging
          paths:
            - bin
  # -------------------------------------------------------------------------- #

  package:
    docker:
      - image: openbankdev/lake_base
    working_directory: /go/src/github.com/jancajthaml-openbank/lake
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - lake-binaries-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
      - run: docker build -t openbank/lake ./packaging
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
      - deploy:
          name: Push snapshot docker images to DockerHUB
          command: |
            upload() {
              if [ -z ${CIRCLE_TAG} ] ; then
                VERSION=$(sed 's:.*/::' <<< ${CIRCLE_BRANCH})
                echo "snapshot ${VERSION}"

                docker tag ${1} ${1}:${VERSION}
                docker push ${1}:${VERSION}
              else
                VERSION=${CIRCLE_TAG}
                echo "release ${VERSION}"

                docker tag ${1} ${1}:${VERSION}
                docker push ${1}:${VERSION}

                docker tag ${1} ${1}:latest
                docker push ${1}:latest
              fi
            }

            upload openbank/lake

  # -------------------------------------------------------------------------- #

  bbtest:
    machine: true
    working_directory: /home/circleci/project
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project/packaging
      - run: docker build -t openbankdev/lake_bbtest -f ./bbtest/Dockerfile .
      - run:
          name: Run blackbox tests
          command: |
            docker exec -it $(\
              docker run -d -ti \
                -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
                -v /home/circleci/project/bbtest:/opt/bbtest \
                -v /home/circleci/project/reports:/reports \
              openbankdev/lake_bbtest \
            ) rspec --require /opt/bbtest/spec.rb \
              --format documentation \
              --format RspecJunitFormatter \
              --out junit.xml \
              --pattern /opt/bbtest/features/*.feature
      - store_test_results:
          path: /home/circleci/project/bbtest
      - store_artifacts:
          path: /home/circleci/project/reports
          destination: reports

  # -------------------------------------------------------------------------- #

  release:
    docker:
      - image: openbankdev/lake_base
    working_directory: /go/src/github.com/jancajthaml-openbank/lake
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - lake-binaries-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
      - run: if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_amd64.deb ] ; then exit 1 ; fi
      - run: if [ ! -f ./packaging/bin/linux-amd64 ] ; then exit 1 ; fi
      - run: if [ ! -f ./packaging/bin/lake_${CIRCLE_TAG#v}_armhf.deb ] ; then exit 1 ; fi
      - run: if [ ! -f ./packaging/bin/linux-armhf ] ; then exit 1 ; fi
      - deploy:
          name: Release artifacts to github
          command: |
            ./dev/lifecycle/release -v ${CIRCLE_TAG} -t ${GITHUB_RELEASE_TOKEN}


# ---------------------------------------------------------------------------- #
