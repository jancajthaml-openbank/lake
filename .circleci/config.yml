version: 2

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - setup
      - package:
          requires:
            - build
      - bbtest:
          requires:
            - package

  rolling:
    triggers:
      - schedule:
          cron: "0,5,10,15,20,25,30,35,40,45,50,55 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - bbtest

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  setup:

    docker:
      - image: docker:17.09.0-ce-git
        environment:
          - LANG: C.UTF-8
          - GOARCH: amd64
          - GOOS: linux
          - GOBIN: /usr/lib/go/bin/go

    working_directory: /home/circleci/project

    steps:

      - checkout

      - setup_remote_docker

      - run:
          name: Build images
          command: |
            docker build -t openbankdev/lake_bbtest ./bbtest &
            docker build -t openbankdev/lake_base ./dev &
            wait

      - run:
          name: Login to DockerHUB
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}

      - deploy:
          name: Push to docker hub
          command: |
            upload_to_docker_hub() {
              docker tag ${1} "${1}:latest"
              docker push "${1}:latest"
            }

            upload_to_docker_hub openbankdev/lake_bbtest &
            upload_to_docker_hub openbankdev/lake_base &
            wait

  # -------------------------------------------------------------------------- #

  test:

    docker:
      - image: openbankdev/lake_base
        environment:
          - DIST: /go/src/github.com/jancajthaml-openbank/lake/bin

    working_directory: /go/src/github.com/jancajthaml-openbank/lake

    steps:

      - checkout

      - run: dep ensure

      - run: go test -v ./... -benchmem -bench=. -timeout=20s

  # -------------------------------------------------------------------------- #

  build:

    docker:
      - image: openbankdev/lake_base
        environment:
          - DIST: /go/src/github.com/jancajthaml-openbank/lake/bin

    working_directory: /go/src/github.com/jancajthaml-openbank/lake

    steps:

      - checkout

      - run: dep ensure

      - run: if [ -d ${DIST} ] && [ "$(ls -A ${DIST})" ] ; then rm -rf ${DIST}/* ; fi

      - run:
          name: Package binary
          command: |
            mkdir -p /tmp
            build=$(git rev-parse HEAD 2> /dev/null || :)

            if [ -n "${VERSION}" ] ; then
              version="${VERSION}"
            elif [ -n "${GIT_TAG_NAME}" ] && [[ "${GIT_TAG_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]] ; then
              version="${GIT_TAG_NAME}"
            else
              version="snapshot-${build}"
            fi

            go clean

            go build -a -o ${DIST}/entrypoint \
              --ldflags "-X main.version=$version -X main.build=$build"

      - run: if [ ! -f ${DIST}/entrypoint ] ; then exit 1 ; fi

      - run:
          name: Package debian
          command: |
            make prep
            debuild -- binary
            make teardown

      - persist_to_workspace:
          root: /go/src/github.com/jancajthaml-openbank/lake/bin/deb
          paths:
            - lake_*_amd64.deb

  # -------------------------------------------------------------------------- #

  package:

    docker:
      - image: docker:17.09.0-ce-git

    working_directory: /app

    steps:

      - checkout

      - attach_workspace:
          at: /app/bin/deb

      - setup_remote_docker

      - run: if [ -z find /app/bin/deb -type f -name 'lake_*_amd64.deb' -print -quit ] ; then exit 1 ; fi

      - run: docker build -t openbank/lake .

      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}

      - deploy:
          name: Push images to DockerHUB
          command: |
            upload_to_docker_hub() {
              docker tag ${1} "${1}:${2}"
              docker push "${1}:${2}"
            }

            if git log -1 --pretty=%B | grep "[v?][0-9]\+\.[0-9]\+\.[0-9]\+" ; then
              git fetch --tags --force
              VERSION=$(git tag | grep "[v?][0-9]\+\.[0-9]\+\.[0-9]\+" | sort -t. -k 1,1n -k 2,2n -k 3,3n | tail -1 | sed 's/\v//g')
              upload_to_docker_hub openbank/lake latest
              upload_to_docker_hub openbank/lake ${VERSION}
            else
              VERSION=$(git rev-parse --abbrev-ref HEAD 2> /dev/null | sed 's:.*/::')
              upload_to_docker_hub openbank/lake ${VERSION}
            fi

  # -------------------------------------------------------------------------- #

  bbtest:
    machine: true

    environment:
      - PERSISTENCE_PATH: /home/circleci/project/dev/data

    working_directory: /home/circleci/project

    steps:

      - checkout

      - run:
          name: Prepare blackbox tests
          command: |
            if git log -1 --pretty=%B | grep "[v?][0-9]\+\.[0-9]\+\.[0-9]\+" ; then
              VERSION=$(git tag | grep "[v?][0-9]\+\.[0-9]\+\.[0-9]\+" | sort -t. -k 1,1n -k 2,2n -k 3,3n | tail -1 | sed 's/\v//g')
            else
              VERSION=$(git rev-parse --abbrev-ref HEAD 2> /dev/null | sed 's:.*/::')
            fi

            pull() {
              echo "pulling ${1}:${2}"
              docker pull ${1}:${2}
            }

            pull openbank/lake ${VERSION} & \
            pull openbankdev/lake_bbtest latest & \
            wait

      - run:
          name: Run blackbox tests
          command: |
            if git log -1 --pretty=%B | grep "[v?][0-9]\+\.[0-9]\+\.[0-9]\+" ; then
              VERSION=$(git tag | grep "[v?][0-9]\+\.[0-9]\+\.[0-9]\+" | sort -t. -k 1,1n -k 2,2n -k 3,3n | tail -1 | sed 's/\v//g')
            else
              VERSION=$(git rev-parse --abbrev-ref HEAD 2> /dev/null | sed 's:.*/::')
            fi

            VERSION=${VERSION} docker-compose run --rm bbtest

      - store_test_results:
          path: /home/circleci/project/bbtest

      - store_artifacts:
          path: /home/circleci/project/reports
          destination: reports

# ---------------------------------------------------------------------------- #
