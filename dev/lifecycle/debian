#!/bin/sh

set -eu
trap exit INT TERM

VERSION=""
TARGET_ARCHITECTURE=""

while [ $# -gt 0 ] ; do
key="$1"

case $key in

    --arch)
      TARGET_ARCHITECTURE="$2"
      shift
      shift
    ;;

    -v|--version)
      VERSION="$2"
      shift
      shift
    ;;

    *)
      shift
    ;;

esac
done

if [ ! "${VERSION}" ] ; then
  (>&2 echo "version not provided")
  exit 1
fi

if [ ! "${TARGET_ARCHITECTURE}" ] ; then
  (>&2 echo "target architecture not provided (use e.g. --arch amd64)")
  exit 1
fi

append_to_changelog() {
  local desc="$*"

  DATE=$(git log -1 --format=%cD ${tag})

  if [ ${FIRST} -eq 0 ] ; then echo >> ${CHANGELOG} ; fi
  FIRST=0

  echo "lake (${VER}) ${DIST}; urgency=low" >> ${CHANGELOG}
  echo >> ${CHANGELOG}
  if [ "${desc}" ] ; then
    echo "${desc}" >> ${CHANGELOG}
    echo >> ${CHANGELOG}
  fi
  echo " -- Jan Cajthaml <jan.cajthaml@gmail.com>  ${DATE}" >> ${CHANGELOG}
}

generate_changelog() {
  VER="${VERSION}"
  tag=HEAD
  ADDS=$(echo ${VER} | sed -e 's/~.*//' | cut -s -d- -f2)
  if [ -f ${CHANGELOG} ] ; then
    rm -f ${CHANGELOG}
  fi
  if [ -n "${ADDS}" ] ; then
    append_to_changelog "  * includes ${ADDS} commits after $(echo ${VER} | cut -d- -f1) release"
  fi

  for tag in $(git tag --sort=-v:refname); do
    VER=${tag#v}
    append_to_changelog "$(git tag -l -n20 ${tag} | tail -n+2 | sed -e 's/^ */  /')"
  done

  if [ ! -f ${CHANGELOG} ] ; then
    append_to_changelog
  fi
}

################################################################################

PKGS="$(pwd)/packaging"
DEB_SOURCES="${PKGS}/debian_${TARGET_ARCHITECTURE}"
BIN_SOURCES="${PKGS}/bin"

if [ ! -d "${DEB_SOURCES}" ] ; then
  (>&2 echo "packaging for ${TARGET_ARCHITECTURE} is not supported")
  exit 1
fi

CHANGELOG=${DEB_SOURCES}/DEBIAN/changelog
CONTROL=${DEB_SOURCES}/DEBIAN/control
DIST=unstable
FIRST=1

if [ ! -f "${BIN_SOURCES}/linux-${TARGET_ARCHITECTURE}" ] ; then
  (>&2 echo "did not found binary to package at ${BIN_SOURCES}/linux-${TARGET_ARCHITECTURE}")
  exit 1
fi

cp \
  ${BIN_SOURCES}/linux-${TARGET_ARCHITECTURE} \
  ${DEB_SOURCES}/openbank/services/lake/linux-${TARGET_ARCHITECTURE}

generate_changelog
sed -i 's/Version.*/Version: '${VERSION#v}'/' ${CONTROL}

dpkg-deb --build "${DEB_SOURCES}" "${BIN_SOURCES}"
