#!/bin/bash

set -eu
trap exit INT TERM

VERSION=""
SOURCE=""
TARGET_ARCHITECTURE=""

while [ $# -gt 0 ] ; do
key="$1"

case $key in

  --source)
    SOURCE="$2"
    shift
    shift
  ;;

  --arch)
    TARGET_ARCHITECTURE="$2"
    shift
    shift
  ;;

  --version)
    VERSION="$2"
    shift
    shift
  ;;

  *)
    shift
  ;;

esac
done

if [ -z "${VERSION}" ] ; then
  (>&2 echo "version not provided")
  exit 1
fi

if [ -z "${SOURCE}" ] ; then
  (>&2 echo "source not provided")
  exit 1
fi

if [ -z "${TARGET_ARCHITECTURE}" ] ; then
  (>&2 echo "target architecture not provided (use e.g. --arch amd64)")
  exit 1
fi

cd ${SOURCE}

################################################################################

generate_changelog() {
  target="${SOURCE}/debian/changelog"

  if [ -f ${target} ] ; then
    rm -f ${target}
  fi

  touch ${target}

  VER="${VERSION}"
  tag=HEAD
  ADDS=$(echo ${VER} | sed -e 's/~.*//' | cut -s -d- -f2 | sed '/^[[:space:]]*$/d')

  if [[ -z "${ADDS// }" ]] ; then
    DATE=$(date '+%a, %-d %b %Y %H:%M:%S %z')
    echo "lake (${VER}) experimental; urgency=medium" >> ${target}
    echo "" >> ${target}
    echo "  * includes non-released commits" >> ${target}
    echo "" >> ${target}
    echo " -- Jan Cajthaml <jan.cajthaml@gmail.com>  ${DATE}" >> ${target}
    echo "" >> ${target}
  fi

  PAIRS=()
  prev_tag=HEAD
  for tag in $(git tag --sort=-v:refname | awk '{arr[i++]=$0} END {while (i>0) print arr[--i] }') ; do
    PAIRS+=("${prev_tag} ${tag}")
    prev_tag=${tag}
  done

  idx=( ${!PAIRS[@]} )
  for ((i=${#idx[@]} - 1; i >= 0; i--)) ; do
    tag_from=${PAIRS[idx[i]]%% *}
    tag_to=${PAIRS[idx[i]]#* }

    DATE=$(git log -1 --format=%cD ${tag_to})

    commits=$(echo "$(git log --no-merges --pretty=oneline --pretty=format:%s ^${tag_from} ${tag_to})" | sed '/^[[:space:]]*$/d' | uniq)

    if [[ -n "${commits// }" ]] ; then
      echo "lake (${tag_to#v}) stable; urgency=medium" >> ${target}
      echo "" >> ${target}

      echo "${commits}" | \
      while read note ; do
        echo "  * $(tr '[:lower:]' '[:upper:]' <<< ${note:0:1})${note:1}" >> ${target}
      done

      echo "" >> ${target}

      echo " -- Jan Cajthaml <jan.cajthaml@gmail.com>  ${DATE}" >> ${target}
      echo "" >> ${target}
    fi
  done
}

################################################################################

#find "bin" -name "lake_*_${TARGET_ARCHITECTURE}.deb" -exec fakeroot lintian --pedantic {} \;


generate_changelog
dpkg-buildpackage -tc -uc -b -rfakeroot --target-arch ${TARGET_ARCHITECTURE}
find ".." -name "lake_*_${TARGET_ARCHITECTURE}.*" -exec mv {} bin/ \;

find bin -name "lake_*_${TARGET_ARCHITECTURE}.deb" -exec fakeroot lintian --pedantic {} \;

exit 0
