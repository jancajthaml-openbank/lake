#!/bin/bash

set -Eeuo pipefail
trap exit INT TERM

dist="packaging/bin"
platforms=(darwin)
VERSION=""

package_service() {
  local output=${1}/${2}-${3}
  if [ -f ${output} ] ; then
    rm -f ${output}
  fi

  echo "[info] packaging for ${2}"

  GOOS=${2} \
  GOARCH=amd64 \
  CGO_ENABLED=1 \
  \
  go build -a -o ${output} \
  \
  --ldflags "-X main.version=${3}" || {
    (>&2 echo "unable to build ${2} distribution")
    exit 1
  }

  chmod +x ${output}
}

while [[ $# -gt 0 ]] ; do
key="$1"

case $key in
    -t|--target)
    IFS=',' read -ra platforms <<< "$2"
    shift
    shift
    ;;
    -v|--version)
    VERSION="$2"
    shift
    shift
    ;;
    -o|--output)
    dist="$2"
    shift
    shift
    ;;
    *)
    shift
    ;;
esac
done

if [ -z "${VERSION// }" ] ; then
  echo "version not provided"
  exit 1
fi

echo "[info] cleaning"
go clean

echo "[info] packaging ${VERSION}"
for platform in "${platforms[@]}" ; do
  package_service ${dist} ${platform} ${VERSION}
done

if [ ! -f ${dist}/linux-${VERSION} ] ; then
  (>&2 echo "[error] ${dist}/linux-${VERSION} not found")
  exit 1
else
  cp ${dist}/linux-${VERSION} ${dist}/linux-amd64
fi

echo "[info] done"
